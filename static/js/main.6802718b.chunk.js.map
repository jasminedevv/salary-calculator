{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["legible","num","parseInt","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","yearly","monthly","hourly","week","calculateYearly","bind","assertThisInitialized","calculateMonthly","calculateHourly","calculateWeek","event","target","value","setState","new_monthly","new_yearly","new_hourly","react_default","a","createElement","className","Header","as","Container","Input","fluid","label","onChange","href","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6802718b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Input, Header, Container } from 'semantic-ui-react'\n\nfunction legible(num) {\n  if (num == \"\") {\n    return \"\"\n  } else {\n    return parseInt(num)\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      yearly: 60000,\n      monthly: 5000,\n      hourly: 38,\n      week: 30,\n    }\n    this.calculateYearly = this.calculateYearly.bind(this)\n    this.calculateMonthly = this.calculateMonthly.bind(this)\n    this.calculateHourly = this.calculateHourly.bind(this)\n    this.calculateWeek = this.calculateWeek.bind(this)\n  }\n\n  calculateWeek(event) {\n    let week = event.target.value\n    this.setState({ week: week })\n\n    let hourly = this.state.hourly\n\n    // with new hours/week, calculate salary\n    let new_monthly = hourly * week * 4.3\n    this.setState({ monthly: new_monthly })\n\n    let new_yearly = new_monthly * 12\n    this.setState({ yearly: new_yearly })\n  }\n\n  calculateHourly(event) {\n    let hourly = event.target.value\n    this.setState({ hourly: hourly })\n\n    let week = this.state.week\n\n    // with new hourly value, calculate the other\n    let new_monthly = hourly * week * 4.3\n    this.setState({ monthly: new_monthly })\n\n    let new_yearly = new_monthly * 12\n    this.setState({ yearly: new_yearly })\n  }\n\n  calculateMonthly(event) {\n    let monthly = event.target.value\n    this.setState({ monthly: monthly })\n\n    let week = this.state.week\n\n    // with new monthly value, calculate the others\n    let new_yearly = monthly * 12\n    this.setState({ yearly: new_yearly })\n\n    let new_hourly = monthly / 4.3 / week\n    this.setState({ hourly: new_hourly })\n  }\n\n  calculateYearly(event) {\n    let yearly = event.target.value\n    this.setState({ yearly: yearly })\n\n    let week = this.state.week\n\n    // with new yearly value, set the new values\n    let new_monthly = yearly / 12\n    this.setState({ monthly: new_monthly })\n\n    let new_hourly = yearly / 52 / week // TODO: what's the equation?\n    this.setState({ hourly: new_hourly })\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <br /><br />\n        <Header as='h1'>Salary Calculator</Header>\n        <br /><br />\n        <Container className=\"max-300\">\n          <Input fluid\n            label=\"yearly\"\n            value={legible(this.state.yearly)}\n            onChange={this.calculateYearly}\n          />\n          <br /><br />\n          <Input fluid\n            label=\"monthly\"\n            value={legible(this.state.monthly)}\n            onChange={this.calculateMonthly}\n          />\n          <br /><br />\n          <Input fluid\n            label=\"hourly\"\n            value={legible(this.state.hourly)}\n            onChange={this.calculateHourly}\n          />\n          <br /><br />\n          <Input fluid\n            label=\"hours /week\"\n            value={legible(this.state.week)}\n            onChange={this.calculateWeek}\n          />\n          <br /><br />\n          <p>Convert hourly pay to monthly and yearly based on hours in a workweek.</p>\n          <p>Numbers are rounded to the nearest integer and there are 4.3 weeks in a month.</p>\n          <br></br><br></br>\n          <a href=\"https://twitter.com/lacunahag\">‚ù§ a lacunahag project</a>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}